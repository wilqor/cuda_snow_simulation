<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>cuda.kask.eti.pg.gda</groupId>
        <artifactId>SnowflakesCudaSimulationParent</artifactId>
        <version>1.0-SNAPSHOT</version>
    </parent>

    <groupId>cuda.kask.eti.pg.gda</groupId>
    <artifactId>SnowflakesCudaSimulationSlave</artifactId>
    <version>1.0</version>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jcuda.version>0.7.0</jcuda.version>
        <slick.version>1.0</slick.version>
        <!--
        <system.version>linux-x86_64</system.version>
         -->
        <system.version>windows-x86_64</system.version>
        <main_dir>..</main_dir>
    </properties>

    <dependencies>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>2.6.1</version>
        </dependency>
        <!-- commons -->
        <dependency>
            <groupId>cuda.kask.eti.pg.gda</groupId>
            <artifactId>SnowflakesCudaSimulationCommons</artifactId>
            <version>1.0</version>
        </dependency>
        <!-- jCuda libs -->
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcuda</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcublas</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcufft</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcurand</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <dependency>
            <groupId>jcuda</groupId>
            <artifactId>jcusparse</artifactId>
            <version>${jcuda.version}</version>
        </dependency>
        <!-- slick libs -->
        <dependency>
            <groupId>slick</groupId>
            <artifactId>lwjgl</artifactId>
            <version>${slick.version}</version>
        </dependency>
        <dependency>
            <groupId>slick</groupId>
            <artifactId>lwjgl_util</artifactId>
            <version>${slick.version}</version>
        </dependency>
        <dependency>
            <groupId>slick</groupId>
            <artifactId>jinput</artifactId>
            <version>${slick.version}</version>
        </dependency>
        <dependency>
            <groupId>slick</groupId>
            <artifactId>slick</artifactId>
            <version>${slick.version}</version>
        </dependency>


        <!-- native Linux libs -->
        <!--
        <dependency>
            <groupId>jcuda.linux</groupId>
            <artifactId>libJCudaDriver</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>so</type>
        </dependency>
        <dependency>
            <groupId>jcuda.linux</groupId>
            <artifactId>libJCublas</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>so</type>
        </dependency>
        <dependency>
            <groupId>jcuda.linux</groupId>
            <artifactId>libJCublas2</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>so</type>
        </dependency>
        <dependency>
            <groupId>jcuda.linux</groupId>
            <artifactId>libJCudaRuntime</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>so</type>
        </dependency>
        <dependency>
            <groupId>jcuda.linux</groupId>
            <artifactId>libJCufft</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>so</type>
        </dependency>
        <dependency>
            <groupId>jcuda.linux</groupId>
            <artifactId>libJCurand</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>so</type>
        </dependency>
        <dependency>
            <groupId>jcuda.linux</groupId>
            <artifactId>libJCusparse</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>so</type>
        </dependency>
        -->

        <!-- native slick Linux libs -->
        <!--
        <dependency>
            <groupId>slick.linux</groupId>
            <artifactId>libjinput-linux</artifactId>
            <version>${slick.version}</version>
            <type>so</type>
        </dependency>
        <dependency>
            <groupId>slick.linux</groupId>
            <artifactId>libjinput-linux64</artifactId>
            <version>${slick.version}</version>
            <type>so</type>
        </dependency>
        <dependency>
            <groupId>slick.linux</groupId>
            <artifactId>liblwjgl</artifactId>
            <version>${slick.version}</version>
            <type>so</type>
        </dependency>
        <dependency>
            <groupId>slick.linux</groupId>
            <artifactId>liblwjgl64</artifactId>
            <version>${slick.version}</version>
            <type>so</type>
        </dependency>
        <dependency>
            <groupId>slick.linux</groupId>
            <artifactId>libopenal</artifactId>
            <version>${slick.version}</version>
            <type>so</type>
        </dependency>
        <dependency>
            <groupId>slick.linux</groupId>
            <artifactId>libopenal64</artifactId>
            <version>${slick.version}</version>
            <type>so</type>
        </dependency>
        -->

        <!-- native Windows libs -->
        <!-- native JCuda Windows libs -->
        <dependency>
            <groupId>jcuda.windows</groupId>
            <artifactId>JCudaDriver</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>jcuda.windows</groupId>
            <artifactId>JCublas</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>jcuda.windows</groupId>
            <artifactId>JCublas2</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>jcuda.windows</groupId>
            <artifactId>JCudaRuntime</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>jcuda.windows</groupId>
            <artifactId>JCufft</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>jcuda.windows</groupId>
            <artifactId>JCurand</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>jcuda.windows</groupId>
            <artifactId>JCusparse</artifactId>
            <version>${jcuda.version}</version>
            <classifier>${system.version}</classifier>
            <type>dll</type>
        </dependency>
        <!-- native slick Windows libs -->
        <dependency>
            <groupId>slick.windows</groupId>
            <artifactId>jinput-dx8</artifactId>
            <version>${slick.version}</version>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>slick.windows</groupId>
            <artifactId>jinput-dx8_64</artifactId>
            <version>${slick.version}</version>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>slick.windows</groupId>
            <artifactId>jinput-raw</artifactId>
            <version>${slick.version}</version>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>slick.windows</groupId>
            <artifactId>jinput-raw_64</artifactId>
            <version>${slick.version}</version>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>slick.windows</groupId>
            <artifactId>lwjgl</artifactId>
            <version>${slick.version}</version>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>slick.windows</groupId>
            <artifactId>lwjgl64</artifactId>
            <version>${slick.version}</version>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>slick.windows</groupId>
            <artifactId>OpenAL32</artifactId>
            <version>${slick.version}</version>
            <type>dll</type>
        </dependency>
        <dependency>
            <groupId>slick.windows</groupId>
            <artifactId>OpenAL64</artifactId>
            <version>${slick.version}</version>
            <type>dll</type>
        </dependency>

        <!-- regular dependencies -->
        <dependency>
            <groupId>javax.websocket</groupId>
            <artifactId>javax.websocket-api</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>org.java-websocket</groupId>
            <artifactId>Java-WebSocket</artifactId>
            <version>1.3.0</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1</version>
        </dependency>
    </dependencies>

    <repositories>
        <repository>
            <id>jcuda.local</id>
            <name>jCuda</name>
            <url>file:${main_dir}/repo</url>
        </repository>
    </repositories>

    <build>
        <defaultGoal>package</defaultGoal>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.9</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>
                                copy-dependencies
                            </goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                            <!-- get rid of version for native libraries -->
                            <stripVersion>true</stripVersion>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <!-- mvn exec:exec -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.3.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>
                                exec
                            </goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>java</executable>
                    <arguments>
                        <argument>-Djava.library.path=${project.build.directory}/lib</argument>
                        <argument>-classpath</argument>
                        <!-- will be inserted with the dependencies and the build dir -->
                        <classpath/>
                        <!-- the main class -->
                        <argument>snowflakes.cuda.kask.eti.pg.gda.pl.slave.Main</argument>
                        <!-- other possible arguments -->
                    </arguments>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>